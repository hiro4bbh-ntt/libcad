(function() {var implementors = {};
implementors["cad"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"cad/struct.InterpCmdArgs.html\" title=\"struct cad::InterpCmdArgs\">InterpCmdArgs</a>","synthetic":true,"types":["cad::InterpCmdArgs"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"cad/struct.TypeChkCmdArgs.html\" title=\"struct cad::TypeChkCmdArgs\">TypeChkCmdArgs</a>","synthetic":true,"types":["cad::TypeChkCmdArgs"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"cad/enum.CmdArgs.html\" title=\"enum cad::CmdArgs\">CmdArgs</a>","synthetic":true,"types":["cad::CmdArgs"]}];
implementors["libcad"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/annot/syntax/struct.Fieldptr.html\" title=\"struct libcad::annot::syntax::Fieldptr\">Fieldptr</a>","synthetic":true,"types":["libcad::annot::syntax::Fieldptr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/annot/syntax/struct.CastMatchCase.html\" title=\"struct libcad::annot::syntax::CastMatchCase\">CastMatchCase</a>","synthetic":true,"types":["libcad::annot::syntax::CastMatchCase"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/annot/syntax/struct.CastMatch.html\" title=\"struct libcad::annot::syntax::CastMatch\">CastMatch</a>","synthetic":true,"types":["libcad::annot::syntax::CastMatch"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/annot/syntax/struct.RestrictCastMatch.html\" title=\"struct libcad::annot::syntax::RestrictCastMatch\">RestrictCastMatch</a>","synthetic":true,"types":["libcad::annot::syntax::RestrictCastMatch"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/annot/syntax/enum.Refiner.html\" title=\"enum libcad::annot::syntax::Refiner\">Refiner</a>","synthetic":true,"types":["libcad::annot::syntax::Refiner"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/annot/syntax/enum.RefinerApp.html\" title=\"enum libcad::annot::syntax::RefinerApp\">RefinerApp</a>","synthetic":true,"types":["libcad::annot::syntax::RefinerApp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/annot/syntax/struct.DefineRefiner.html\" title=\"struct libcad::annot::syntax::DefineRefiner\">DefineRefiner</a>","synthetic":true,"types":["libcad::annot::syntax::DefineRefiner"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/annot/syntax/struct.ApplyRefiner.html\" title=\"struct libcad::annot::syntax::ApplyRefiner\">ApplyRefiner</a>","synthetic":true,"types":["libcad::annot::syntax::ApplyRefiner"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/annot/syntax/enum.Annot.html\" title=\"enum libcad::annot::syntax::Annot\">Annot</a>","synthetic":true,"types":["libcad::annot::syntax::Annot"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"libcad/annot/syntax/struct.VarMap.html\" title=\"struct libcad::annot::syntax::VarMap\">VarMap</a>&lt;P&gt;","synthetic":true,"types":["libcad::annot::syntax::VarMap"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/annot/struct.AnnotFile.html\" title=\"struct libcad::annot::AnnotFile\">AnnotFile</a>","synthetic":true,"types":["libcad::annot::AnnotFile"]},{"text":"impl&lt;'a, T, I&gt; Freeze for <a class=\"struct\" href=\"libcad/fmt/struct.DisplayIter.html\" title=\"struct libcad::fmt::DisplayIter\">DisplayIter</a>&lt;'a, T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["libcad::fmt::DisplayIter"]},{"text":"impl&lt;'a, K, V, I&gt; Freeze for <a class=\"struct\" href=\"libcad/fmt/struct.DisplayMapIter.html\" title=\"struct libcad::fmt::DisplayMapIter\">DisplayMapIter</a>&lt;'a, K, V, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["libcad::fmt::DisplayMapIter"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"libcad/llir/abi/struct.AffineExpr.html\" title=\"struct libcad::llir::abi::AffineExpr\">AffineExpr</a>&lt;I&gt;","synthetic":true,"types":["libcad::llir::abi::AffineExpr"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"libcad/llir/abi/struct.GetelementptrResult.html\" title=\"struct libcad::llir::abi::GetelementptrResult\">GetelementptrResult</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["libcad::llir::abi::GetelementptrResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/llir/abi/struct.DataLayout.html\" title=\"struct libcad::llir::abi::DataLayout\">DataLayout</a>","synthetic":true,"types":["libcad::llir::abi::DataLayout"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/llir/interp/rtti/enum.ExtName.html\" title=\"enum libcad::llir::interp::rtti::ExtName\">ExtName</a>","synthetic":true,"types":["libcad::llir::interp::rtti::ExtName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/llir/interp/rtti/struct.ExtIdent.html\" title=\"struct libcad::llir::interp::rtti::ExtIdent\">ExtIdent</a>","synthetic":true,"types":["libcad::llir::interp::rtti::ExtIdent"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/llir/interp/syntax/enum.Error.html\" title=\"enum libcad::llir::interp::syntax::Error\">Error</a>","synthetic":true,"types":["libcad::llir::interp::syntax::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/llir/interp/syntax/enum.Region.html\" title=\"enum libcad::llir::interp::syntax::Region\">Region</a>","synthetic":true,"types":["libcad::llir::interp::syntax::Region"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/llir/interp/syntax/struct.Addr.html\" title=\"struct libcad::llir::interp::syntax::Addr\">Addr</a>","synthetic":true,"types":["libcad::llir::interp::syntax::Addr"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/llir/interp/syntax/enum.Const.html\" title=\"enum libcad::llir::interp::syntax::Const\">Const</a>","synthetic":true,"types":["libcad::llir::interp::syntax::Const"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/llir/interp/syntax/struct.Val.html\" title=\"struct libcad::llir::interp::syntax::Val\">Val</a>","synthetic":true,"types":["libcad::llir::interp::syntax::Val"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/llir/interp/syntax/struct.Func.html\" title=\"struct libcad::llir::interp::syntax::Func\">Func</a>","synthetic":true,"types":["libcad::llir::interp::syntax::Func"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/llir/interp/syntax/enum.Cont.html\" title=\"enum libcad::llir::interp::syntax::Cont\">Cont</a>","synthetic":true,"types":["libcad::llir::interp::syntax::Cont"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/llir/interp/syntax/enum.Effect.html\" title=\"enum libcad::llir::interp::syntax::Effect\">Effect</a>","synthetic":true,"types":["libcad::llir::interp::syntax::Effect"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/llir/interp/syntax/enum.PoisonVal.html\" title=\"enum libcad::llir::interp::syntax::PoisonVal\">PoisonVal</a>","synthetic":true,"types":["libcad::llir::interp::syntax::PoisonVal"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/llir/interp/syntax/enum.State.html\" title=\"enum libcad::llir::interp::syntax::State\">State</a>","synthetic":true,"types":["libcad::llir::interp::syntax::State"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/llir/interp/struct.ValView.html\" title=\"struct libcad::llir::interp::ValView\">ValView</a>","synthetic":true,"types":["libcad::llir::interp::ValView"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/llir/interp/struct.Interp.html\" title=\"struct libcad::llir::interp::Interp\">Interp</a>","synthetic":true,"types":["libcad::llir::interp::Interp"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"libcad/llir/parser/struct.Parser.html\" title=\"struct libcad::llir::parser::Parser\">Parser</a>&lt;'a&gt;","synthetic":true,"types":["libcad::llir::parser::Parser"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.LocalIdent.html\" title=\"struct libcad::llir::syntax::LocalIdent\">LocalIdent</a>","synthetic":true,"types":["libcad::llir::syntax::LocalIdent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.GlobalIdent.html\" title=\"struct libcad::llir::syntax::GlobalIdent\">GlobalIdent</a>","synthetic":true,"types":["libcad::llir::syntax::GlobalIdent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.ExtIdentUnit.html\" title=\"struct libcad::llir::syntax::ExtIdentUnit\">ExtIdentUnit</a>","synthetic":true,"types":["libcad::llir::syntax::ExtIdentUnit"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"enum\" href=\"libcad/llir/syntax/enum.Type.html\" title=\"enum libcad::llir::syntax::Type\">Type</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["libcad::llir::syntax::Type"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"enum\" href=\"libcad/llir/syntax/enum.ParamAttrArg.html\" title=\"enum libcad::llir::syntax::ParamAttrArg\">ParamAttrArg</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["libcad::llir::syntax::ParamAttrArg"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.ParamAttr.html\" title=\"struct libcad::llir::syntax::ParamAttr\">ParamAttr</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["libcad::llir::syntax::ParamAttr"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.ParamAttrs.html\" title=\"struct libcad::llir::syntax::ParamAttrs\">ParamAttrs</a>&lt;I&gt;","synthetic":true,"types":["libcad::llir::syntax::ParamAttrs"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.Param.html\" title=\"struct libcad::llir::syntax::Param\">Param</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["libcad::llir::syntax::Param"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.RetParam.html\" title=\"struct libcad::llir::syntax::RetParam\">RetParam</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["libcad::llir::syntax::RetParam"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.FuncSig.html\" title=\"struct libcad::llir::syntax::FuncSig\">FuncSig</a>&lt;I&gt;","synthetic":true,"types":["libcad::llir::syntax::FuncSig"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"enum\" href=\"libcad/llir/syntax/enum.AggOpArgs.html\" title=\"enum libcad::llir::syntax::AggOpArgs\">AggOpArgs</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["libcad::llir::syntax::AggOpArgs"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/llir/syntax/enum.WrapMode.html\" title=\"enum libcad::llir::syntax::WrapMode\">WrapMode</a>","synthetic":true,"types":["libcad::llir::syntax::WrapMode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/llir/syntax/enum.BinOpcode.html\" title=\"enum libcad::llir::syntax::BinOpcode\">BinOpcode</a>","synthetic":true,"types":["libcad::llir::syntax::BinOpcode"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.BinOpArgs.html\" title=\"struct libcad::llir::syntax::BinOpArgs\">BinOpArgs</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["libcad::llir::syntax::BinOpArgs"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/llir/syntax/enum.IcmpCond.html\" title=\"enum libcad::llir::syntax::IcmpCond\">IcmpCond</a>","synthetic":true,"types":["libcad::llir::syntax::IcmpCond"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/llir/syntax/enum.FcmpCond.html\" title=\"enum libcad::llir::syntax::FcmpCond\">FcmpCond</a>","synthetic":true,"types":["libcad::llir::syntax::FcmpCond"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/llir/syntax/enum.CmpOpcode.html\" title=\"enum libcad::llir::syntax::CmpOpcode\">CmpOpcode</a>","synthetic":true,"types":["libcad::llir::syntax::CmpOpcode"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.CmpOpArgs.html\" title=\"struct libcad::llir::syntax::CmpOpArgs\">CmpOpArgs</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["libcad::llir::syntax::CmpOpArgs"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/llir/syntax/enum.ConvOpcode.html\" title=\"enum libcad::llir::syntax::ConvOpcode\">ConvOpcode</a>","synthetic":true,"types":["libcad::llir::syntax::ConvOpcode"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.ConvOpArgs.html\" title=\"struct libcad::llir::syntax::ConvOpArgs\">ConvOpArgs</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["libcad::llir::syntax::ConvOpArgs"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.GetelementptrArgs.html\" title=\"struct libcad::llir::syntax::GetelementptrArgs\">GetelementptrArgs</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["libcad::llir::syntax::GetelementptrArgs"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/llir/syntax/enum.UnOpcode.html\" title=\"enum libcad::llir::syntax::UnOpcode\">UnOpcode</a>","synthetic":true,"types":["libcad::llir::syntax::UnOpcode"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.UnOpArgs.html\" title=\"struct libcad::llir::syntax::UnOpArgs\">UnOpArgs</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["libcad::llir::syntax::UnOpArgs"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"enum\" href=\"libcad/llir/syntax/enum.VecOpArgs.html\" title=\"enum libcad::llir::syntax::VecOpArgs\">VecOpArgs</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["libcad::llir::syntax::VecOpArgs"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"enum\" href=\"libcad/llir/syntax/enum.Value.html\" title=\"enum libcad::llir::syntax::Value\">Value</a>&lt;I&gt;","synthetic":true,"types":["libcad::llir::syntax::Value"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.TypedValue.html\" title=\"struct libcad::llir::syntax::TypedValue\">TypedValue</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["libcad::llir::syntax::TypedValue"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.ParamValue.html\" title=\"struct libcad::llir::syntax::ParamValue\">ParamValue</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["libcad::llir::syntax::ParamValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.Label.html\" title=\"struct libcad::llir::syntax::Label\">Label</a>","synthetic":true,"types":["libcad::llir::syntax::Label"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/llir/syntax/enum.TailMode.html\" title=\"enum libcad::llir::syntax::TailMode\">TailMode</a>","synthetic":true,"types":["libcad::llir::syntax::TailMode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/llir/syntax/enum.CallConv.html\" title=\"enum libcad::llir::syntax::CallConv\">CallConv</a>","synthetic":true,"types":["libcad::llir::syntax::CallConv"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"enum\" href=\"libcad/llir/syntax/enum.Callee.html\" title=\"enum libcad::llir::syntax::Callee\">Callee</a>&lt;I&gt;","synthetic":true,"types":["libcad::llir::syntax::Callee"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"enum\" href=\"libcad/llir/syntax/enum.LandingpadClause.html\" title=\"enum libcad::llir::syntax::LandingpadClause\">LandingpadClause</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["libcad::llir::syntax::LandingpadClause"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"enum\" href=\"libcad/llir/syntax/enum.Attr.html\" title=\"enum libcad::llir::syntax::Attr\">Attr</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["libcad::llir::syntax::Attr"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.CallBody.html\" title=\"struct libcad::llir::syntax::CallBody\">CallBody</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["libcad::llir::syntax::CallBody"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"enum\" href=\"libcad/llir/syntax/enum.Insn.html\" title=\"enum libcad::llir::syntax::Insn\">Insn</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["libcad::llir::syntax::Insn"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/llir/syntax/enum.Linkage.html\" title=\"enum libcad::llir::syntax::Linkage\">Linkage</a>","synthetic":true,"types":["libcad::llir::syntax::Linkage"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/llir/syntax/enum.Visibility.html\" title=\"enum libcad::llir::syntax::Visibility\">Visibility</a>","synthetic":true,"types":["libcad::llir::syntax::Visibility"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/llir/syntax/enum.UnnamedAddr.html\" title=\"enum libcad::llir::syntax::UnnamedAddr\">UnnamedAddr</a>","synthetic":true,"types":["libcad::llir::syntax::UnnamedAddr"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.FuncDecl.html\" title=\"struct libcad::llir::syntax::FuncDecl\">FuncDecl</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["libcad::llir::syntax::FuncDecl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.MetadataRef.html\" title=\"struct libcad::llir::syntax::MetadataRef\">MetadataRef</a>","synthetic":true,"types":["libcad::llir::syntax::MetadataRef"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"enum\" href=\"libcad/llir/syntax/enum.Metadata.html\" title=\"enum libcad::llir::syntax::Metadata\">Metadata</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["libcad::llir::syntax::Metadata"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.DIFile.html\" title=\"struct libcad::llir::syntax::DIFile\">DIFile</a>","synthetic":true,"types":["libcad::llir::syntax::DIFile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.DILexicalBlock.html\" title=\"struct libcad::llir::syntax::DILexicalBlock\">DILexicalBlock</a>","synthetic":true,"types":["libcad::llir::syntax::DILexicalBlock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.DILexicalBlockFile.html\" title=\"struct libcad::llir::syntax::DILexicalBlockFile\">DILexicalBlockFile</a>","synthetic":true,"types":["libcad::llir::syntax::DILexicalBlockFile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.DILocation.html\" title=\"struct libcad::llir::syntax::DILocation\">DILocation</a>","synthetic":true,"types":["libcad::llir::syntax::DILocation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.DISubprogram.html\" title=\"struct libcad::llir::syntax::DISubprogram\">DISubprogram</a>","synthetic":true,"types":["libcad::llir::syntax::DISubprogram"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.MetadataList.html\" title=\"struct libcad::llir::syntax::MetadataList\">MetadataList</a>","synthetic":true,"types":["libcad::llir::syntax::MetadataList"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.Block.html\" title=\"struct libcad::llir::syntax::Block\">Block</a>&lt;I&gt;","synthetic":true,"types":["libcad::llir::syntax::Block"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.Blocks.html\" title=\"struct libcad::llir::syntax::Blocks\">Blocks</a>&lt;I&gt;","synthetic":true,"types":["libcad::llir::syntax::Blocks"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"enum\" href=\"libcad/llir/syntax/enum.Stmt.html\" title=\"enum libcad::llir::syntax::Stmt\">Stmt</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["libcad::llir::syntax::Stmt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.LineInfo.html\" title=\"struct libcad::llir::syntax::LineInfo\">LineInfo</a>","synthetic":true,"types":["libcad::llir::syntax::LineInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.Loc.html\" title=\"struct libcad::llir::syntax::Loc\">Loc</a>","synthetic":true,"types":["libcad::llir::syntax::Loc"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.LocLineInfo.html\" title=\"struct libcad::llir::syntax::LocLineInfo\">LocLineInfo</a>","synthetic":true,"types":["libcad::llir::syntax::LocLineInfo"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.Typedefs.html\" title=\"struct libcad::llir::syntax::Typedefs\">Typedefs</a>&lt;I&gt;","synthetic":true,"types":["libcad::llir::syntax::Typedefs"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"libcad/llir/syntax/struct.Module.html\" title=\"struct libcad::llir::syntax::Module\">Module</a>&lt;I&gt;","synthetic":true,"types":["libcad::llir::syntax::Module"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/reader/sexpr/enum.SExpr.html\" title=\"enum libcad::reader::sexpr::SExpr\">SExpr</a>","synthetic":true,"types":["libcad::reader::sexpr::SExpr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/reader/sexpr/struct.MacroEnv.html\" title=\"struct libcad::reader::sexpr::MacroEnv\">MacroEnv</a>","synthetic":true,"types":["libcad::reader::sexpr::MacroEnv"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"libcad/reader/sexpr/struct.Parser.html\" title=\"struct libcad::reader::sexpr::Parser\">Parser</a>&lt;'a&gt;","synthetic":true,"types":["libcad::reader::sexpr::Parser"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"libcad/reader/struct.FilePos.html\" title=\"struct libcad::reader::FilePos\">FilePos</a>&lt;'a&gt;","synthetic":true,"types":["libcad::reader::FilePos"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"libcad/reader/struct.StringReader.html\" title=\"struct libcad::reader::StringReader\">StringReader</a>&lt;'a&gt;","synthetic":true,"types":["libcad::reader::StringReader"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"libcad/solver/bitfield/struct.BitField.html\" title=\"struct libcad::solver::bitfield::BitField\">BitField</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["libcad::solver::bitfield::BitField"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/solver/bitfield/struct.BitFieldBuilder.html\" title=\"struct libcad::solver::bitfield::BitFieldBuilder\">BitFieldBuilder</a>","synthetic":true,"types":["libcad::solver::bitfield::BitFieldBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/solver/bitfield/struct.BitFieldSet.html\" title=\"struct libcad::solver::bitfield::BitFieldSet\">BitFieldSet</a>","synthetic":true,"types":["libcad::solver::bitfield::BitFieldSet"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/solver/bitfield/enum.BitFieldConstr.html\" title=\"enum libcad::solver::bitfield::BitFieldConstr\">BitFieldConstr</a>","synthetic":true,"types":["libcad::solver::bitfield::BitFieldConstr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/solver/bitfield/struct.BitFieldEnv.html\" title=\"struct libcad::solver::bitfield::BitFieldEnv\">BitFieldEnv</a>","synthetic":true,"types":["libcad::solver::bitfield::BitFieldEnv"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"libcad/solver/bitfield/struct.BitFieldBasis.html\" title=\"struct libcad::solver::bitfield::BitFieldBasis\">BitFieldBasis</a>&lt;T&gt;","synthetic":true,"types":["libcad::solver::bitfield::BitFieldBasis"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"libcad/solver/bitfield/struct.BitFieldBasisIter.html\" title=\"struct libcad::solver::bitfield::BitFieldBasisIter\">BitFieldBasisIter</a>&lt;'a, T&gt;","synthetic":true,"types":["libcad::solver::bitfield::BitFieldBasisIter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/solver/syntax/enum.CondConst.html\" title=\"enum libcad::solver::syntax::CondConst\">CondConst</a>","synthetic":true,"types":["libcad::solver::syntax::CondConst"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/solver/syntax/struct.CondVar.html\" title=\"struct libcad::solver::syntax::CondVar\">CondVar</a>","synthetic":true,"types":["libcad::solver::syntax::CondVar"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/solver/syntax/enum.CondExpr.html\" title=\"enum libcad::solver::syntax::CondExpr\">CondExpr</a>","synthetic":true,"types":["libcad::solver::syntax::CondExpr"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/solver/syntax/enum.CondPred.html\" title=\"enum libcad::solver::syntax::CondPred\">CondPred</a>","synthetic":true,"types":["libcad::solver::syntax::CondPred"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/solver/syntax/enum.Cond.html\" title=\"enum libcad::solver::syntax::Cond\">Cond</a>","synthetic":true,"types":["libcad::solver::syntax::Cond"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"libcad/solver/union_find/struct.UnionFind.html\" title=\"struct libcad::solver::union_find::UnionFind\">UnionFind</a>&lt;T&gt;","synthetic":true,"types":["libcad::solver::union_find::UnionFind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/solver/struct.Solver.html\" title=\"struct libcad::solver::Solver\">Solver</a>","synthetic":true,"types":["libcad::solver::Solver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/symbol/struct.Symbol.html\" title=\"struct libcad::symbol::Symbol\">Symbol</a>","synthetic":true,"types":["libcad::symbol::Symbol"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"libcad/symbol/struct.SymbolTable.html\" title=\"struct libcad::symbol::SymbolTable\">SymbolTable</a>&lt;T&gt;","synthetic":true,"types":["libcad::symbol::SymbolTable"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/symbol/struct.Ident.html\" title=\"struct libcad::symbol::Ident\">Ident</a>","synthetic":true,"types":["libcad::symbol::Ident"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/typechk/cast/struct.FieldVarBase.html\" title=\"struct libcad::typechk::cast::FieldVarBase\">FieldVarBase</a>","synthetic":true,"types":["libcad::typechk::cast::FieldVarBase"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/typechk/cast/struct.FieldVar.html\" title=\"struct libcad::typechk::cast::FieldVar\">FieldVar</a>","synthetic":true,"types":["libcad::typechk::cast::FieldVar"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/typechk/cast/enum.TargetState.html\" title=\"enum libcad::typechk::cast::TargetState\">TargetState</a>","synthetic":true,"types":["libcad::typechk::cast::TargetState"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/typechk/cast/enum.VarState.html\" title=\"enum libcad::typechk::cast::VarState\">VarState</a>","synthetic":true,"types":["libcad::typechk::cast::VarState"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"libcad/typechk/cast/struct.DerefValue.html\" title=\"struct libcad::typechk::cast::DerefValue\">DerefValue</a>&lt;'a&gt;","synthetic":true,"types":["libcad::typechk::cast::DerefValue"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"libcad/typechk/cast/struct.StoreResult.html\" title=\"struct libcad::typechk::cast::StoreResult\">StoreResult</a>&lt;'a&gt;","synthetic":true,"types":["libcad::typechk::cast::StoreResult"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/typechk/cast/enum.CondState.html\" title=\"enum libcad::typechk::cast::CondState\">CondState</a>","synthetic":true,"types":["libcad::typechk::cast::CondState"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/typechk/cast/enum.CastChkKind.html\" title=\"enum libcad::typechk::cast::CastChkKind\">CastChkKind</a>","synthetic":true,"types":["libcad::typechk::cast::CastChkKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/typechk/cast/enum.PathState.html\" title=\"enum libcad::typechk::cast::PathState\">PathState</a>","synthetic":true,"types":["libcad::typechk::cast::PathState"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/typechk/cast/struct.Path.html\" title=\"struct libcad::typechk::cast::Path\">Path</a>","synthetic":true,"types":["libcad::typechk::cast::Path"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/typechk/cast/struct.CastChkState.html\" title=\"struct libcad::typechk::cast::CastChkState\">CastChkState</a>","synthetic":true,"types":["libcad::typechk::cast::CastChkState"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/typechk/cast/struct.CastChk.html\" title=\"struct libcad::typechk::cast::CastChk\">CastChk</a>","synthetic":true,"types":["libcad::typechk::cast::CastChk"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/typechk/cast/enum.CastChkResultKind.html\" title=\"enum libcad::typechk::cast::CastChkResultKind\">CastChkResultKind</a>","synthetic":true,"types":["libcad::typechk::cast::CastChkResultKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/typechk/cast/struct.CastChkResult.html\" title=\"struct libcad::typechk::cast::CastChkResult\">CastChkResult</a>","synthetic":true,"types":["libcad::typechk::cast::CastChkResult"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"libcad/typechk/cast/struct.Resolver.html\" title=\"struct libcad::typechk::cast::Resolver\">Resolver</a>&lt;I&gt;","synthetic":true,"types":["libcad::typechk::cast::Resolver"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/typechk/env/enum.InternMode.html\" title=\"enum libcad::typechk::env::InternMode\">InternMode</a>","synthetic":true,"types":["libcad::typechk::env::InternMode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/typechk/env/struct.TypeEnv.html\" title=\"struct libcad::typechk::env::TypeEnv\">TypeEnv</a>","synthetic":true,"types":["libcad::typechk::env::TypeEnv"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/typechk/syntax/enum.Size.html\" title=\"enum libcad::typechk::syntax::Size\">Size</a>","synthetic":true,"types":["libcad::typechk::syntax::Size"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/typechk/syntax/struct.InferVar.html\" title=\"struct libcad::typechk::syntax::InferVar\">InferVar</a>","synthetic":true,"types":["libcad::typechk::syntax::InferVar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/typechk/syntax/struct.PtrExtIdent.html\" title=\"struct libcad::typechk::syntax::PtrExtIdent\">PtrExtIdent</a>","synthetic":true,"types":["libcad::typechk::syntax::PtrExtIdent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/typechk/syntax/struct.PtrExtIdentDummy.html\" title=\"struct libcad::typechk::syntax::PtrExtIdentDummy\">PtrExtIdentDummy</a>","synthetic":true,"types":["libcad::typechk::syntax::PtrExtIdentDummy"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/typechk/syntax/enum.AllocKind.html\" title=\"enum libcad::typechk::syntax::AllocKind\">AllocKind</a>","synthetic":true,"types":["libcad::typechk::syntax::AllocKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/typechk/syntax/enum.Type.html\" title=\"enum libcad::typechk::syntax::Type\">Type</a>","synthetic":true,"types":["libcad::typechk::syntax::Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/typechk/syntax/struct.FuncArgs.html\" title=\"struct libcad::typechk::syntax::FuncArgs\">FuncArgs</a>","synthetic":true,"types":["libcad::typechk::syntax::FuncArgs"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/typechk/syntax/enum.ValueExt.html\" title=\"enum libcad::typechk::syntax::ValueExt\">ValueExt</a>","synthetic":true,"types":["libcad::typechk::syntax::ValueExt"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/typechk/syntax/enum.JudgeTerm.html\" title=\"enum libcad::typechk::syntax::JudgeTerm\">JudgeTerm</a>","synthetic":true,"types":["libcad::typechk::syntax::JudgeTerm"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/typechk/syntax/enum.EffectKind.html\" title=\"enum libcad::typechk::syntax::EffectKind\">EffectKind</a>","synthetic":true,"types":["libcad::typechk::syntax::EffectKind"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"libcad/typechk/syntax/struct.StoreEffect.html\" title=\"struct libcad::typechk::syntax::StoreEffect\">StoreEffect</a>&lt;'a&gt;","synthetic":true,"types":["libcad::typechk::syntax::StoreEffect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/typechk/syntax/struct.Effect.html\" title=\"struct libcad::typechk::syntax::Effect\">Effect</a>","synthetic":true,"types":["libcad::typechk::syntax::Effect"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/typechk/syntax/enum.VarName.html\" title=\"enum libcad::typechk::syntax::VarName\">VarName</a>","synthetic":true,"types":["libcad::typechk::syntax::VarName"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/typechk/syntax/enum.ConstrKind.html\" title=\"enum libcad::typechk::syntax::ConstrKind\">ConstrKind</a>","synthetic":true,"types":["libcad::typechk::syntax::ConstrKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/typechk/syntax/enum.AllocReason.html\" title=\"enum libcad::typechk::syntax::AllocReason\">AllocReason</a>","synthetic":true,"types":["libcad::typechk::syntax::AllocReason"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/typechk/syntax/enum.FreeKind.html\" title=\"enum libcad::typechk::syntax::FreeKind\">FreeKind</a>","synthetic":true,"types":["libcad::typechk::syntax::FreeKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/typechk/syntax/enum.Constr.html\" title=\"enum libcad::typechk::syntax::Constr\">Constr</a>","synthetic":true,"types":["libcad::typechk::syntax::Constr"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/typechk/syntax/enum.CastReasonKind.html\" title=\"enum libcad::typechk::syntax::CastReasonKind\">CastReasonKind</a>","synthetic":true,"types":["libcad::typechk::syntax::CastReasonKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/typechk/syntax/enum.CastReason.html\" title=\"enum libcad::typechk::syntax::CastReason\">CastReason</a>","synthetic":true,"types":["libcad::typechk::syntax::CastReason"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/typechk/syntax/struct.Constrs.html\" title=\"struct libcad::typechk::syntax::Constrs\">Constrs</a>","synthetic":true,"types":["libcad::typechk::syntax::Constrs"]},{"text":"impl&lt;'a, 'b&gt; Freeze for <a class=\"struct\" href=\"libcad/typechk/struct.TypeChk.html\" title=\"struct libcad::typechk::TypeChk\">TypeChk</a>&lt;'a, 'b&gt;","synthetic":true,"types":["libcad::typechk::TypeChk"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libcad/typechk/enum.CastWarnMsg.html\" title=\"enum libcad::typechk::CastWarnMsg\">CastWarnMsg</a>","synthetic":true,"types":["libcad::typechk::CastWarnMsg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/typechk/struct.CastWarn.html\" title=\"struct libcad::typechk::CastWarn\">CastWarn</a>","synthetic":true,"types":["libcad::typechk::CastWarn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/typechk/struct.TypeWarn.html\" title=\"struct libcad::typechk::TypeWarn\">TypeWarn</a>","synthetic":true,"types":["libcad::typechk::TypeWarn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/typechk/struct.CastWarnSummary.html\" title=\"struct libcad::typechk::CastWarnSummary\">CastWarnSummary</a>","synthetic":true,"types":["libcad::typechk::CastWarnSummary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/typechk/struct.TypeWarnSummary.html\" title=\"struct libcad::typechk::TypeWarnSummary\">TypeWarnSummary</a>","synthetic":true,"types":["libcad::typechk::TypeWarnSummary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libcad/typechk/struct.TypeChkReport.html\" title=\"struct libcad::typechk::TypeChkReport\">TypeChkReport</a>","synthetic":true,"types":["libcad::typechk::TypeChkReport"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()